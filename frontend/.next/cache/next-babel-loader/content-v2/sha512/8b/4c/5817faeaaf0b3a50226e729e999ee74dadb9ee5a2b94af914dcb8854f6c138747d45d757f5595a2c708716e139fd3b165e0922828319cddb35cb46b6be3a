{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\seoblog\\\\frontend\\\\components\\\\DisqusThread.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DisqusShortname, DOMAIN } from \"../config\";\nconst SHORTNAME = DisqusShortname;\nconst WEBSITE_URL = DOMAIN;\n\nfunction renderDisqus() {\n  if (window.DISQUS === undefined) {\n    var script = document.createElement('script');\n    script.async = true;\n    script.src = 'https://' + SHORTNAME + '.disqus.com/embed.js';\n    document.getElementsByTagName('head')[0].appendChild(script);\n  } else {\n    window.DISQUS.reset({\n      reload: true\n    });\n  }\n}\n\nclass DisqusThread extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    return this.props.id !== nextProps.id || this.props.title !== nextProps.title || this.props.path !== nextProps.path;\n  }\n\n  componentDidMount() {\n    renderDisqus();\n  }\n\n  componentDidUpdate() {\n    renderDisqus();\n  }\n\n  render() {\n    let _this$props = this.props,\n        {\n      id,\n      title,\n      path\n    } = _this$props,\n        other = _objectWithoutProperties(_this$props, [\"id\", \"title\", \"path\"]);\n\n    if (process.env.BROWSER) {\n      window.disqus_shortname = SHORTNAME;\n      window.disqus_identifier = id;\n      window.disqus_title = title;\n      window.disqus_url = WEBSITE_URL + path;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, other), {}, {\n      id: \"disqus_thread\"\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\n_defineProperty(DisqusThread, \"propTypes\", {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired\n});\n\nexport default DisqusThread;","map":{"version":3,"sources":["E:/seoblog/frontend/components/DisqusThread.js"],"names":["React","PropTypes","DisqusShortname","DOMAIN","SHORTNAME","WEBSITE_URL","renderDisqus","window","DISQUS","undefined","script","document","createElement","async","src","getElementsByTagName","appendChild","reset","reload","DisqusThread","Component","shouldComponentUpdate","nextProps","props","id","title","path","componentDidMount","componentDidUpdate","render","other","process","env","BROWSER","disqus_shortname","disqus_identifier","disqus_title","disqus_url","string","isRequired"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,eAAR,EAAyBC,MAAzB,QAAsC,WAAtC;AAEA,MAAMC,SAAS,GAAGF,eAAlB;AACA,MAAMG,WAAW,GAAGF,MAApB;;AAEA,SAASG,YAAT,GAAwB;AACpB,MAAIC,MAAM,CAACC,MAAP,KAAkBC,SAAtB,EAAiC;AAC7B,QAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACAF,IAAAA,MAAM,CAACG,KAAP,GAAe,IAAf;AACAH,IAAAA,MAAM,CAACI,GAAP,GAAa,aAAaV,SAAb,GAAyB,sBAAtC;AACAO,IAAAA,QAAQ,CAACI,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,WAAzC,CAAqDN,MAArD;AACH,GALD,MAKO;AACHH,IAAAA,MAAM,CAACC,MAAP,CAAcS,KAAd,CAAoB;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAApB;AACH;AACJ;;AAED,MAAMC,YAAN,SAA2BnB,KAAK,CAACoB,SAAjC,CAA2C;AAOvCC,EAAAA,qBAAqB,CAACC,SAAD,EAAY;AAC7B,WACI,KAAKC,KAAL,CAAWC,EAAX,KAAkBF,SAAS,CAACE,EAA5B,IACA,KAAKD,KAAL,CAAWE,KAAX,KAAqBH,SAAS,CAACG,KAD/B,IAEA,KAAKF,KAAL,CAAWG,IAAX,KAAoBJ,SAAS,CAACI,IAHlC;AAKH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBrB,IAAAA,YAAY;AACf;;AAEDsB,EAAAA,kBAAkB,GAAG;AACjBtB,IAAAA,YAAY;AACf;;AAEDuB,EAAAA,MAAM,GAAG;AACL,sBAAoC,KAAKN,KAAzC;AAAA,QAAI;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,KAAN;AAAaC,MAAAA;AAAb,KAAJ;AAAA,QAA0BI,KAA1B;;AAEA,QAAIC,OAAO,CAACC,GAAR,CAAYC,OAAhB,EAAyB;AACrB1B,MAAAA,MAAM,CAAC2B,gBAAP,GAA0B9B,SAA1B;AACAG,MAAAA,MAAM,CAAC4B,iBAAP,GAA2BX,EAA3B;AACAjB,MAAAA,MAAM,CAAC6B,YAAP,GAAsBX,KAAtB;AACAlB,MAAAA,MAAM,CAAC8B,UAAP,GAAoBhC,WAAW,GAAGqB,IAAlC;AACH;;AAED,wBAAO,+CAASI,KAAT;AAAgB,MAAA,EAAE,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAlCsC;;gBAArCX,Y,eACiB;AACfK,EAAAA,EAAE,EAAEvB,SAAS,CAACqC,MAAV,CAAiBC,UADN;AAEfd,EAAAA,KAAK,EAAExB,SAAS,CAACqC,MAAV,CAAiBC,UAFT;AAGfb,EAAAA,IAAI,EAAEzB,SAAS,CAACqC,MAAV,CAAiBC;AAHR,C;;AAoCvB,eAAepB,YAAf","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {DisqusShortname, DOMAIN} from \"../config\";\r\n\r\nconst SHORTNAME = DisqusShortname;\r\nconst WEBSITE_URL = DOMAIN\r\n\r\nfunction renderDisqus() {\r\n    if (window.DISQUS === undefined) {\r\n        var script = document.createElement('script');\r\n        script.async = true;\r\n        script.src = 'https://' + SHORTNAME + '.disqus.com/embed.js';\r\n        document.getElementsByTagName('head')[0].appendChild(script);\r\n    } else {\r\n        window.DISQUS.reset({ reload: true });\r\n    }\r\n}\r\n\r\nclass DisqusThread extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        path: PropTypes.string.isRequired,\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps) {\r\n        return (\r\n            this.props.id !== nextProps.id ||\r\n            this.props.title !== nextProps.title ||\r\n            this.props.path !== nextProps.path\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        renderDisqus();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        renderDisqus();\r\n    }\r\n\r\n    render() {\r\n        let { id, title, path, ...other } = this.props;\r\n\r\n        if (process.env.BROWSER) {\r\n            window.disqus_shortname = SHORTNAME;\r\n            window.disqus_identifier = id;\r\n            window.disqus_title = title;\r\n            window.disqus_url = WEBSITE_URL + path;\r\n        }\r\n\r\n        return <div {...other} id=\"disqus_thread\" />;\r\n    }\r\n}\r\n\r\nexport default DisqusThread;\r\n"]},"metadata":{},"sourceType":"module"}