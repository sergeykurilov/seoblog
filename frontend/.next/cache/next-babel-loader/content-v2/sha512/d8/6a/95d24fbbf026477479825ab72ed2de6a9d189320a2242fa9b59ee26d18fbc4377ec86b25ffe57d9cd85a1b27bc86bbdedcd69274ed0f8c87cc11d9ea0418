{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\seoblog\\\\frontend\\\\pages\\\\auth\\\\account\\\\activation\\\\[id].js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport jwt from \"jsonwebtoken\";\nimport { PageHeader } from \"../../../../components/pagesHeader\";\nimport { Layout } from \"../../../../components/Layout\";\nimport { signup } from \"../../../../actions/auth\";\nimport { useRouter, withRouter } from 'next/router';\n\nconst ActivateAccount = ({\n  router\n}) => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    name: \"\",\n    token: \"\",\n    message: \"\",\n    error: \"\",\n    loading: false,\n    success: false,\n    showButton: true\n  });\n  const {\n    name,\n    token,\n    message,\n    loading,\n    success,\n    showButton,\n    error\n  } = values;\n  useEffect(() => {\n    let token = router.query.id;\n\n    if (token) {\n      const {\n        name\n      } = jwt.decode(token);\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        name: name,\n        token: token\n      }));\n    }\n  }, []);\n\n  const clickSubmit = e => {\n    e.preventDefault();\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: true,\n      error: false\n    }));\n    signup({\n      token\n    }).then(data => {\n      if (data.error) {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          error: data.error,\n          loading: false,\n          showButton: false\n        }));\n      }\n\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        loading: false,\n        success: true,\n        showButton: false\n      }));\n    });\n  };\n\n  const showLoading = () => loading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading......\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 42\n  }, this) : \"\";\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"pb-4\",\n        children: [\"Hey \", name, \", Ready to activate your account?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), showLoading(), error && error, success && \"You have successfully activated your account. Please sign in.\", showButton && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clickSubmit,\n        className: \"btn btn-outline-primary\",\n        children: \"Activate Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\nexport default withRouter(ActivateAccount);","map":{"version":3,"sources":["E:/seoblog/frontend/pages/auth/account/activation/[id].js"],"names":["React","useEffect","useState","jwt","PageHeader","Layout","signup","useRouter","withRouter","ActivateAccount","router","values","setValues","name","token","message","error","loading","success","showButton","query","id","decode","clickSubmit","e","preventDefault","then","data","showLoading"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport jwt from \"jsonwebtoken\";\r\nimport {PageHeader} from \"../../../../components/pagesHeader\";\r\nimport {Layout} from \"../../../../components/Layout\";\r\nimport {signup} from \"../../../../actions/auth\";\r\nimport {useRouter, withRouter} from 'next/router'\r\n\r\n\r\nconst ActivateAccount = ({router}) => {\r\n    const [values, setValues] = useState({\r\n        name: \"\",\r\n        token: \"\",\r\n        message: \"\",\r\n        error: \"\",\r\n        loading: false,\r\n        success: false,\r\n        showButton: true\r\n    })\r\n\r\n    const {name, token, message, loading, success, showButton, error} = values\r\n\r\n\r\n    useEffect(() => {\r\n        let token = router.query.id\r\n        if(token){\r\n            const {name} = jwt.decode(token)\r\n            setValues({...values, name: name, token: token})\r\n        }\r\n    },[])\r\n\r\n    const clickSubmit = (e) => {\r\n        e.preventDefault()\r\n        setValues({...values, loading: true, error: false})\r\n        signup({token}).then(data => {\r\n            if(data.error){\r\n                setValues({...values, error: data.error, loading: false, showButton: false})\r\n            }\r\n            setValues({...values, loading: false, success: true, showButton: false})\r\n        })\r\n    }\r\n\r\n    const showLoading = () => loading ? (<h2>Loading......</h2>) : \"\"\r\n    return (\r\n        <Layout>\r\n            <div className=\"container\">\r\n                <h3 className=\"pb-4\">Hey {name}, Ready to activate your account?</h3>\r\n                {showLoading()}\r\n                {error && error}\r\n                {success && \"You have successfully activated your account. Please sign in.\"}\r\n                {showButton && <button onClick={clickSubmit} className=\"btn btn-outline-primary\">Activate Account</button>}\r\n            </div>\r\n        </Layout>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default withRouter(ActivateAccount)\r\n"]},"metadata":{},"sourceType":"module"}