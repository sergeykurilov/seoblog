{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"E:/seoblog/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/seoblog/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"E:/seoblog/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:/seoblog/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"E:/seoblog/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:/seoblog/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"E:/seoblog/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\seoblog\\\\frontend\\\\components\\\\crud\\\\Editor.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nexport var EditorComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(EditorComponent, _React$Component);\n\n  var _super = _createSuper(EditorComponent);\n\n  function EditorComponent(props) {\n    var _this;\n\n    _classCallCheck(this, EditorComponent);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"modules\", {\n      toolbar: [['bold', 'italic', 'underline', 'strike'], // toggled buttons\n      ['blockquote', 'code-block'], [{\n        'header': 1\n      }, {\n        'header': 2\n      }], // custom button values\n      [{\n        'list': 'ordered'\n      }, {\n        'list': 'bullet'\n      }], [{\n        'script': 'sub'\n      }, {\n        'script': 'super'\n      }], // superscript/subscript\n      [{\n        'indent': '-1'\n      }, {\n        'indent': '+1'\n      }], // outdent/indent\n      [{\n        'direction': 'rtl'\n      }], // text direction\n      [{\n        'size': ['small', false, 'large', 'huge']\n      }], // custom dropdown\n      [{\n        'header': [1, 2, 3, 4, 5, 6, false]\n      }], [{\n        'color': []\n      }, {\n        'background': []\n      }], // dropdown with defaults from theme\n      [{\n        'font': []\n      }], [{\n        'align': []\n      }], ['clean'], // remove formatting button\n      ['link', 'image']]\n    });\n\n    _this.state = {\n      text: ''\n    }; // You can also pass a Quill Delta here\n\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(EditorComponent, [{\n    key: \"handleChange\",\n    value: function handleChange(value) {\n      this.setState({\n        text: value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Quill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n          theme: \"snow\",\n          modules: this.modules,\n          value: this.state.text,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return EditorComponent;\n}(React.Component);\n;\nexport default EditorComponent;","map":{"version":3,"sources":["E:/seoblog/frontend/components/crud/Editor.js"],"names":["React","Component","ReactQuill","EditorComponent","props","toolbar","state","text","handleChange","bind","value","setState","modules"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,iCAAP;AAIA,WAAaC,eAAb;AAAA;;AAAA;;AACI,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,8DAUT;AACNC,MAAAA,OAAO,EAAE,CACL,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB,EAAgC,QAAhC,CADK,EAC6C;AAClD,OAAC,YAAD,EAAe,YAAf,CAFK,EAIL,CAAC;AAAE,kBAAU;AAAZ,OAAD,EAAkB;AAAE,kBAAU;AAAZ,OAAlB,CAJK,EAI6C;AAClD,OAAC;AAAE,gBAAQ;AAAV,OAAD,EAAuB;AAAE,gBAAQ;AAAV,OAAvB,CALK,EAML,CAAC;AAAE,kBAAU;AAAZ,OAAD,EAAqB;AAAE,kBAAU;AAAZ,OAArB,CANK,EAM6C;AAClD,OAAC;AAAE,kBAAU;AAAZ,OAAD,EAAoB;AAAE,kBAAU;AAAZ,OAApB,CAPK,EAO6C;AAClD,OAAC;AAAE,qBAAa;AAAf,OAAD,CARK,EAQ6C;AAElD,OAAC;AAAE,gBAAQ,CAAC,OAAD,EAAU,KAAV,EAAiB,OAAjB,EAA0B,MAA1B;AAAV,OAAD,CAVK,EAU6C;AAClD,OAAC;AAAE,kBAAU,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,KAAnB;AAAZ,OAAD,CAXK,EAaL,CAAC;AAAE,iBAAS;AAAX,OAAD,EAAkB;AAAE,sBAAc;AAAhB,OAAlB,CAbK,EAa6C;AAClD,OAAC;AAAE,gBAAQ;AAAV,OAAD,CAdK,EAeL,CAAC;AAAE,iBAAS;AAAX,OAAD,CAfK,EAiBL,CAAC,OAAD,CAjBK,EAiB6C;AAClD,OAAC,MAAD,EAAS,OAAT,CAlBK;AADH,KAVS;;AAEf,UAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAb,CAFe,CAEY;;AAC3B,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AAHe;AAIlB;;AALL;AAAA;AAAA,iCAOiBC,KAPjB,EAOwB;AAChB,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,IAAI,EAAEG;AAAR,OAAd;AACH;AATL;AAAA;AAAA,6BAkCa;AACL,0BACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,UAAD;AACI,UAAA,KAAK,EAAC,MADV;AAEI,UAAA,OAAO,EAAE,KAAKE,OAFlB;AAGI,UAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,IAHtB;AAII,UAAA,QAAQ,EAAE,KAAKC;AAJnB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAUH;AA7CL;;AAAA;AAAA,EAAqCR,KAAK,CAACC,SAA3C;AA8CC;AAED,eAAeE,eAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\nexport class EditorComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { text: '' }; // You can also pass a Quill Delta here\r\n        this.handleChange = this.handleChange.bind(this);\r\n    };\r\n\r\n    handleChange(value) {\r\n        this.setState({ text: value });\r\n    };\r\n\r\n    modules = {\r\n        toolbar: [\r\n            ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\r\n            ['blockquote', 'code-block'],\r\n\r\n            [{ 'header': 1 }, { 'header': 2 }],               // custom button values\r\n            [{ 'list': 'ordered'}, { 'list': 'bullet' }],\r\n            [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript\r\n            [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent\r\n            [{ 'direction': 'rtl' }],                         // text direction\r\n\r\n            [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\r\n            [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n\r\n            [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\r\n            [{ 'font': [] }],\r\n            [{ 'align': [] }],\r\n\r\n            ['clean'],                                        // remove formatting button\r\n            ['link', 'image']\r\n        ]\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='editor'>\r\n                <h2>Quill</h2>\r\n                <ReactQuill\r\n                    theme=\"snow\"\r\n                    modules={this.modules}\r\n                    value={this.state.text}\r\n                    onChange={this.handleChange} />\r\n            </div>\r\n        )\r\n    };\r\n};\r\n\r\nexport default EditorComponent\r\n"]},"metadata":{},"sourceType":"module"}