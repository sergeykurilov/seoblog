{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"E:/seoblog/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"E:/seoblog/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/seoblog/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"E:/seoblog/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"E:/seoblog/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:/seoblog/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"E:/seoblog/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\seoblog\\\\frontend\\\\components\\\\DisqusThread.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DisqusShortname, DOMAIN } from \"../config\";\nvar SHORTNAME = DisqusShortname;\nvar WEBSITE_URL = DOMAIN;\n\nfunction renderDisqus() {\n  if (window.DISQUS === undefined) {\n    var script = document.createElement('script');\n    script.async = true;\n    script.src = 'https://' + SHORTNAME + '.disqus.com/embed.js';\n    document.getElementsByTagName('head')[0].appendChild(script);\n  } else {\n    window.DISQUS.reset({\n      reload: true\n    });\n  }\n}\n\nvar DisqusThread = /*#__PURE__*/function (_React$Component) {\n  _inherits(DisqusThread, _React$Component);\n\n  var _super = _createSuper(DisqusThread);\n\n  function DisqusThread() {\n    _classCallCheck(this, DisqusThread);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DisqusThread, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return this.props.id !== nextProps.id || this.props.title !== nextProps.title || this.props.path !== nextProps.path;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      renderDisqus();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      renderDisqus();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          id = _this$props.id,\n          title = _this$props.title,\n          path = _this$props.path,\n          other = _objectWithoutProperties(_this$props, [\"id\", \"title\", \"path\"]);\n\n      if (process.env.BROWSER) {\n        window.disqus_shortname = SHORTNAME;\n        window.disqus_identifier = id;\n        window.disqus_title = title;\n        window.disqus_url = WEBSITE_URL + path;\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, other), {}, {\n        id: \"disqus_thread\"\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }, this);\n    }\n  }]);\n\n  return DisqusThread;\n}(React.Component);\n\n_defineProperty(DisqusThread, \"propTypes\", {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired\n});\n\nexport default DisqusThread;","map":{"version":3,"sources":["E:/seoblog/frontend/components/DisqusThread.js"],"names":["React","PropTypes","DisqusShortname","DOMAIN","SHORTNAME","WEBSITE_URL","renderDisqus","window","DISQUS","undefined","script","document","createElement","async","src","getElementsByTagName","appendChild","reset","reload","DisqusThread","nextProps","props","id","title","path","other","process","env","BROWSER","disqus_shortname","disqus_identifier","disqus_title","disqus_url","Component","string","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,eAAR,EAAyBC,MAAzB,QAAsC,WAAtC;AAEA,IAAMC,SAAS,GAAGF,eAAlB;AACA,IAAMG,WAAW,GAAGF,MAApB;;AAEA,SAASG,YAAT,GAAwB;AACpB,MAAIC,MAAM,CAACC,MAAP,KAAkBC,SAAtB,EAAiC;AAC7B,QAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACAF,IAAAA,MAAM,CAACG,KAAP,GAAe,IAAf;AACAH,IAAAA,MAAM,CAACI,GAAP,GAAa,aAAaV,SAAb,GAAyB,sBAAtC;AACAO,IAAAA,QAAQ,CAACI,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,WAAzC,CAAqDN,MAArD;AACH,GALD,MAKO;AACHH,IAAAA,MAAM,CAACC,MAAP,CAAcS,KAAd,CAAoB;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAApB;AACH;AACJ;;IAEKC,Y;;;;;;;;;;;;;0CAOoBC,S,EAAW;AAC7B,aACI,KAAKC,KAAL,CAAWC,EAAX,KAAkBF,SAAS,CAACE,EAA5B,IACA,KAAKD,KAAL,CAAWE,KAAX,KAAqBH,SAAS,CAACG,KAD/B,IAEA,KAAKF,KAAL,CAAWG,IAAX,KAAoBJ,SAAS,CAACI,IAHlC;AAKH;;;wCAEmB;AAChBlB,MAAAA,YAAY;AACf;;;yCAEoB;AACjBA,MAAAA,YAAY;AACf;;;6BAEQ;AAAA,wBAC+B,KAAKe,KADpC;AAAA,UACCC,EADD,eACCA,EADD;AAAA,UACKC,KADL,eACKA,KADL;AAAA,UACYC,IADZ,eACYA,IADZ;AAAA,UACqBC,KADrB;;AAGL,UAAIC,OAAO,CAACC,GAAR,CAAYC,OAAhB,EAAyB;AACrBrB,QAAAA,MAAM,CAACsB,gBAAP,GAA0BzB,SAA1B;AACAG,QAAAA,MAAM,CAACuB,iBAAP,GAA2BR,EAA3B;AACAf,QAAAA,MAAM,CAACwB,YAAP,GAAsBR,KAAtB;AACAhB,QAAAA,MAAM,CAACyB,UAAP,GAAoB3B,WAAW,GAAGmB,IAAlC;AACH;;AAED,0BAAO,+CAASC,KAAT;AAAgB,QAAA,EAAE,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;;;EAlCsBzB,KAAK,CAACiC,S;;gBAA3Bd,Y,eACiB;AACfG,EAAAA,EAAE,EAAErB,SAAS,CAACiC,MAAV,CAAiBC,UADN;AAEfZ,EAAAA,KAAK,EAAEtB,SAAS,CAACiC,MAAV,CAAiBC,UAFT;AAGfX,EAAAA,IAAI,EAAEvB,SAAS,CAACiC,MAAV,CAAiBC;AAHR,C;;AAoCvB,eAAehB,YAAf","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {DisqusShortname, DOMAIN} from \"../config\";\r\n\r\nconst SHORTNAME = DisqusShortname;\r\nconst WEBSITE_URL = DOMAIN\r\n\r\nfunction renderDisqus() {\r\n    if (window.DISQUS === undefined) {\r\n        var script = document.createElement('script');\r\n        script.async = true;\r\n        script.src = 'https://' + SHORTNAME + '.disqus.com/embed.js';\r\n        document.getElementsByTagName('head')[0].appendChild(script);\r\n    } else {\r\n        window.DISQUS.reset({ reload: true });\r\n    }\r\n}\r\n\r\nclass DisqusThread extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        path: PropTypes.string.isRequired,\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps) {\r\n        return (\r\n            this.props.id !== nextProps.id ||\r\n            this.props.title !== nextProps.title ||\r\n            this.props.path !== nextProps.path\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        renderDisqus();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        renderDisqus();\r\n    }\r\n\r\n    render() {\r\n        let { id, title, path, ...other } = this.props;\r\n\r\n        if (process.env.BROWSER) {\r\n            window.disqus_shortname = SHORTNAME;\r\n            window.disqus_identifier = id;\r\n            window.disqus_title = title;\r\n            window.disqus_url = WEBSITE_URL + path;\r\n        }\r\n\r\n        return <div {...other} id=\"disqus_thread\" />;\r\n    }\r\n}\r\n\r\nexport default DisqusThread;\r\n"]},"metadata":{},"sourceType":"module"}