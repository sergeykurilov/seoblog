{"ast":null,"code":"import { API } from \"../config\";\nimport fetch from \"isomorphic-fetch\";\nimport cookie from \"js-cookie\";\nexport const signup = user => {\n  return fetch(`${API}/signup`, {\n    \"method\": \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  }).then(res => {\n    return res.json();\n  }).catch(err => console.log(err));\n};\nexport const signin = user => {\n  return fetch(`${API}/signin`, {\n    \"method\": \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  }).then(res => {\n    return res.json();\n  }).catch(err => console.log(err));\n}; //set cookie\n\nconst setCookie = (key, value) => {\n  if (false) {\n    cookie.set(key, value, {\n      expires: 1\n    });\n  }\n};\n\nconst removeCookie = key => {\n  if (false) {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n}; //get cookie\n\n\nconst getCookie = key => {\n  if (false) {\n    cookie.get(key);\n  }\n}; //localstorage\n//authenticate user by pass data to localstorage and cookie","map":{"version":3,"sources":["C:/seoblog/frontend/actions/auth.js"],"names":["API","fetch","cookie","signup","user","headers","Accept","body","JSON","stringify","then","res","json","catch","err","console","log","signin","setCookie","key","value","set","expires","removeCookie","remove","getCookie","get"],"mappings":"AAAA,SAAQA,GAAR,QAAkB,WAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAGA,OAAO,MAAMC,MAAM,GAAIC,IAAD,IAAU;AAC5B,SAAOH,KAAK,CAAE,GAAED,GAAI,SAAR,EAAkB;AAC1B,cAAU,MADgB;AAE1BK,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAFiB;AAM1BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AANoB,GAAlB,CAAL,CAQFM,IARE,CAQGC,GAAG,IAAI;AACT,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,GAVE,EAWFC,KAXE,CAWIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXX,CAAP;AAYH,CAbM;AAeP,OAAO,MAAMG,MAAM,GAAIb,IAAD,IAAU;AAC5B,SAAOH,KAAK,CAAE,GAAED,GAAI,SAAR,EAAkB;AAC1B,cAAU,MADgB;AAE1BK,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAFiB;AAM1BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AANoB,GAAlB,CAAL,CAQFM,IARE,CAQGC,GAAG,IAAI;AACT,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,GAVE,EAWFC,KAXE,CAWIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXX,CAAP;AAYH,CAbM,C,CAgBP;;AACA,MAAMI,SAAS,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC9B,aAAqB;AACjBlB,IAAAA,MAAM,CAACmB,GAAP,CAAWF,GAAX,EAAgBC,KAAhB,EAAuB;AACnBE,MAAAA,OAAO,EAAE;AADU,KAAvB;AAGH;AACJ,CAND;;AAOA,MAAMC,YAAY,GAAIJ,GAAD,IAAS;AAC1B,aAAqB;AACjBjB,IAAAA,MAAM,CAACsB,MAAP,CAAcL,GAAd,EAAmB;AACfG,MAAAA,OAAO,EAAE;AADM,KAAnB;AAGH;AACJ,CAND,C,CAOA;;;AAEA,MAAMG,SAAS,GAAIN,GAAD,IAAS;AACvB,aAAqB;AACjBjB,IAAAA,MAAM,CAACwB,GAAP,CAAWP,GAAX;AACH;AACJ,CAJD,C,CAMA;AAKA","sourcesContent":["import {API} from \"../config\";\r\nimport fetch from \"isomorphic-fetch\"\r\nimport cookie from \"js-cookie\"\r\n\r\n\r\nexport const signup = (user) => {\r\n    return fetch(`${API}/signup`, {\r\n        \"method\": \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(res => {\r\n            return res.json()\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const signin = (user) => {\r\n    return fetch(`${API}/signin`, {\r\n        \"method\": \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(res => {\r\n            return res.json()\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\n\r\n//set cookie\r\nconst setCookie = (key, value) => {\r\n    if (process.browser) {\r\n        cookie.set(key, value, {\r\n            expires: 1\r\n        })\r\n    }\r\n}\r\nconst removeCookie = (key) => {\r\n    if (process.browser) {\r\n        cookie.remove(key, {\r\n            expires: 1\r\n        });\r\n    }\r\n}\r\n//get cookie\r\n\r\nconst getCookie = (key) => {\r\n    if (process.browser) {\r\n        cookie.get(key);\r\n    }\r\n}\r\n\r\n//localstorage\r\n\r\n\r\n\r\n\r\n//authenticate user by pass data to localstorage and cookie\r\n"]},"metadata":{},"sourceType":"module"}