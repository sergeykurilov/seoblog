{"ast":null,"code":"import { API } from \"../config\";\nimport fetch from \"isomorphic-fetch\";\nexport const emailContactForm = data => {\n  let emailEndpoint;\n\n  if (data.authorEmail) {\n    emailEndpoint = `${API}/contact-blog-author`;\n  } else {\n    emailEndpoint = `${API}/contact`;\n  }\n\n  console.log(JSON.stringify(emailEndpoint));\n  return fetch(`${emailEndpoint}`, {\n    method: 'POST',\n    headers: {\n      \"Accept\": 'application/json',\n      \"Content-Type\": 'application/json'\n    },\n    body: JSON.stringify(data)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const leadList = () => {\n  return fetch(`${API}/get-form-data`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const removeFormData = (id, token) => {\n  return fetch(`${API}remove-form-data`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: id\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["E:/seoblog/frontend/actions/form.js"],"names":["API","fetch","emailContactForm","data","emailEndpoint","authorEmail","console","log","JSON","stringify","method","headers","body","then","response","json","catch","err","leadList","removeFormData","id","token","Accept","Authorization"],"mappings":"AAAA,SAAQA,GAAR,QAAkB,WAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,IAAD,IAAU;AACtC,MAAIC,aAAJ;;AACA,MAAID,IAAI,CAACE,WAAT,EAAsB;AAClBD,IAAAA,aAAa,GAAI,GAAEJ,GAAI,sBAAvB;AACH,GAFD,MAEO;AACHI,IAAAA,aAAa,GAAI,GAAEJ,GAAI,UAAvB;AACH;;AACDM,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeL,aAAf,CAAZ;AACA,SAAOH,KAAK,CAAE,GAAEG,aAAc,EAAlB,EAAqB;AAC7BM,IAAAA,MAAM,EAAE,MADqB;AAE7BC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB;AAFX,KAFoB;AAM7BC,IAAAA,IAAI,EAAEJ,IAAI,CAACC,SAAL,CAAeN,IAAf;AANuB,GAArB,CAAL,CAQFU,IARE,CAQGC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAVE,EAWFC,KAXE,CAWIC,GAAG,IAAIX,OAAO,CAACC,GAAR,CAAYU,GAAZ,CAXX,CAAP;AAYH,CApBM;AAsBP,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAE1B,SAAOjB,KAAK,CAAE,GAAED,GAAI,gBAAR,EAAyB;AACjCU,IAAAA,MAAM,EAAE;AADyB,GAAzB,CAAL,CAGFG,IAHE,CAGGC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GALE,EAMFC,KANE,CAMIC,GAAG,IAAIX,OAAO,CAACC,GAAR,CAAYU,GAAZ,CANX,CAAP;AAOH,CATM;AAYP,OAAO,MAAME,cAAc,GAAG,CAACC,EAAD,EAAKC,KAAL,KAAe;AACzC,SAAOpB,KAAK,CAAE,GAAED,GAAI,kBAAR,EAA2B;AACnCU,IAAAA,MAAM,EAAE,QAD2B;AAEnCC,IAAAA,OAAO,EAAE;AACLW,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGLC,MAAAA,aAAa,EAAG,UAASF,KAAM;AAH1B,KAF0B;AAOnCT,IAAAA,IAAI,EAAEQ;AAP6B,GAA3B,CAAL,CASFP,IATE,CASGC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAXE,EAYFC,KAZE,CAYIC,GAAG,IAAIX,OAAO,CAACC,GAAR,CAAYU,GAAZ,CAZX,CAAP;AAaH,CAdM","sourcesContent":["import {API} from \"../config\";\r\nimport fetch from \"isomorphic-fetch\"\r\n\r\nexport const emailContactForm = (data) => {\r\n    let emailEndpoint;\r\n    if (data.authorEmail) {\r\n        emailEndpoint = `${API}/contact-blog-author`\r\n    } else {\r\n        emailEndpoint = `${API}/contact`\r\n    }\r\n    console.log(JSON.stringify(emailEndpoint))\r\n    return fetch(`${emailEndpoint}`, {\r\n        method: 'POST',\r\n        headers: {\r\n            \"Accept\": 'application/json',\r\n            \"Content-Type\": 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const leadList = () => {\r\n\r\n    return fetch(`${API}/get-form-data`, {\r\n        method: 'GET'\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\n\r\nexport const removeFormData = (id, token) => {\r\n    return fetch(`${API}remove-form-data`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: id\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}