{"ast":null,"code":"import { API } from \"../config\";\nimport fetch from \"isomorphic-fetch\";\nimport cookie from \"js-cookie\";\nexport var signup = function signup(user) {\n  return fetch(\"\".concat(API, \"/signup\"), {\n    \"method\": \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  }).then(function (res) {\n    return res.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var signin = function signin(user) {\n  return fetch(\"\".concat(API, \"/signin\"), {\n    \"method\": \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  }).then(function (res) {\n    return res.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n}; //set cookie\n\nvar setCookie = function setCookie(key, value) {\n  if (true) {\n    cookie.set(key, value, {\n      expires: 1\n    });\n  }\n};\n\nvar removeCookie = function removeCookie(key) {\n  if (true) {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n}; //get cookie\n\n\nvar getCookie = function getCookie(key) {\n  if (true) {\n    cookie.get(key);\n  }\n}; //localstorage\n\n\nvar setLocalStorage = function setLocalStorage(key, value) {\n  if (true) {\n    localStorage(key, JSON.stringify(value));\n  }\n}; //authenticate user by pass data to localstorage and cookie\n\n\nvar authenticate = function authenticate(data, next) {\n  localStorage(\"token\", data);\n  cookie.set(data);\n  next();\n};","map":{"version":3,"sources":["C:/seoblog/frontend/actions/auth.js"],"names":["API","fetch","cookie","signup","user","headers","Accept","body","JSON","stringify","then","res","json","err","console","log","signin","setCookie","key","value","set","expires","removeCookie","remove","getCookie","get","setLocalStorage","localStorage","authenticate","data","next"],"mappings":"AAAA,SAAQA,GAAR,QAAkB,WAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAGA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD,EAAU;AAC5B,SAAOH,KAAK,WAAID,GAAJ,cAAkB;AAC1B,cAAU,MADgB;AAE1BK,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAFiB;AAM1BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AANoB,GAAlB,CAAL,CAQFM,IARE,CAQG,UAAAC,GAAG,EAAI;AACT,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,GAVE,WAWI,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GAXP,CAAP;AAYH,CAbM;AAeP,OAAO,IAAMG,MAAM,GAAG,SAATA,MAAS,CAACZ,IAAD,EAAU;AAC5B,SAAOH,KAAK,WAAID,GAAJ,cAAkB;AAC1B,cAAU,MADgB;AAE1BK,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAFiB;AAM1BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AANoB,GAAlB,CAAL,CAQFM,IARE,CAQG,UAAAC,GAAG,EAAI;AACT,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,GAVE,WAWI,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GAXP,CAAP;AAYH,CAbM,C,CAgBP;;AACA,IAAMI,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAMC,KAAN,EAAgB;AAC9B,YAAqB;AACjBjB,IAAAA,MAAM,CAACkB,GAAP,CAAWF,GAAX,EAAgBC,KAAhB,EAAuB;AACnBE,MAAAA,OAAO,EAAE;AADU,KAAvB;AAGH;AACJ,CAND;;AAOA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACJ,GAAD,EAAS;AAC1B,YAAqB;AACjBhB,IAAAA,MAAM,CAACqB,MAAP,CAAcL,GAAd,EAAmB;AACfG,MAAAA,OAAO,EAAE;AADM,KAAnB;AAGH;AACJ,CAND,C,CAOA;;;AAEA,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAACN,GAAD,EAAS;AACvB,YAAqB;AACjBhB,IAAAA,MAAM,CAACuB,GAAP,CAAWP,GAAX;AACH;AACJ,CAJD,C,CAMA;;;AAEA,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAACR,GAAD,EAAKC,KAAL,EAAe;AACnC,YAAqB;AACjBQ,IAAAA,YAAY,CAACT,GAAD,EAAMV,IAAI,CAACC,SAAL,CAAeU,KAAf,CAAN,CAAZ;AACH;AACJ,CAJD,C,CAOA;;;AAGA,IAAMS,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAOC,IAAP,EAAgB;AACjCH,EAAAA,YAAY,CAAC,OAAD,EAAUE,IAAV,CAAZ;AACA3B,EAAAA,MAAM,CAACkB,GAAP,CAAWS,IAAX;AACAC,EAAAA,IAAI;AACP,CAJD","sourcesContent":["import {API} from \"../config\";\r\nimport fetch from \"isomorphic-fetch\"\r\nimport cookie from \"js-cookie\"\r\n\r\n\r\nexport const signup = (user) => {\r\n    return fetch(`${API}/signup`, {\r\n        \"method\": \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(res => {\r\n            return res.json()\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const signin = (user) => {\r\n    return fetch(`${API}/signin`, {\r\n        \"method\": \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(res => {\r\n            return res.json()\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\n\r\n//set cookie\r\nconst setCookie = (key, value) => {\r\n    if (process.browser) {\r\n        cookie.set(key, value, {\r\n            expires: 1\r\n        })\r\n    }\r\n}\r\nconst removeCookie = (key) => {\r\n    if (process.browser) {\r\n        cookie.remove(key, {\r\n            expires: 1\r\n        });\r\n    }\r\n}\r\n//get cookie\r\n\r\nconst getCookie = (key) => {\r\n    if (process.browser) {\r\n        cookie.get(key);\r\n    }\r\n}\r\n\r\n//localstorage\r\n\r\nconst setLocalStorage = (key,value) => {\r\n    if (process.browser) {\r\n        localStorage(key, JSON.stringify(value))\r\n    }\r\n}\r\n\r\n\r\n//authenticate user by pass data to localstorage and cookie\r\n\r\n\r\nconst authenticate = (data, next) => {\r\n    localStorage(\"token\", data)\r\n    cookie.set(data)\r\n    next()\r\n}"]},"metadata":{},"sourceType":"module"}