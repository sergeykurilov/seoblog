{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\seoblog\\\\frontend\\\\components\\\\form\\\\withoutAuthorEmail.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { emailContactForm } from \"../../actions/form\";\n\nconst WithoutAuthorEmail = () => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    message: '',\n    name: '',\n    senderEmail: 'kurilovsergey15@gmail.com',\n    clientEmail: '',\n    sent: false,\n    buttonText: 'Send Message',\n    success: false,\n    error: false\n  });\n  const {\n    message,\n    name,\n    senderEmail,\n    success,\n    error,\n    buttonText,\n    clientEmail\n  } = values;\n\n  const clickSubmit = e => {\n    e.preventDefault();\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      buttonText: \"Sending...\"\n    }));\n    emailContactForm({\n      name,\n      email: senderEmail,\n      message,\n      clientEmail\n    }).then(data => {\n      console.log(data);\n\n      if (data.error) {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          error: data.error\n        }));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          sent: true,\n          name: \"\",\n          email: \"\",\n          message: \"\",\n          clientEmail: \"\",\n          buttonText: \"Sent\",\n          success: data.success\n        }));\n      }\n    });\n  };\n\n  const showError = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alert alert-danger\",\n    style: {\n      display: error ? '' : 'none'\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 29\n  }, this);\n\n  const showSuccess = () => success && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alert alert-info\",\n    style: {\n      display: success ? '' : 'none'\n    },\n    children: \"Thank you for contacting us!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 42\n  }, this);\n\n  const handleChange = name => e => setValues(_objectSpread(_objectSpread({}, values), {}, {\n    [name]: e.target.value,\n    error: false,\n    success: false,\n    buttonText: \"Send Message\"\n  }));\n\n  const contactForm = () => /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: clickSubmit,\n    className: \"pb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"lead\",\n        children: \"Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        value: message,\n        required: true,\n        type: \"text\",\n        rows: \"10\",\n        onChange: handleChange('message')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"lead\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        value: name,\n        required: true,\n        type: \"text\",\n        onChange: handleChange('name')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"lead\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        value: clientEmail,\n        required: true,\n        type: \"email\",\n        onChange: handleChange('clientEmail')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        children: buttonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showError(), showSuccess(), contactForm()]\n  }, void 0, true);\n};\n\nexport default WithoutAuthorEmail;","map":{"version":3,"sources":["E:/seoblog/frontend/components/form/withoutAuthorEmail.js"],"names":["React","useState","emailContactForm","WithoutAuthorEmail","values","setValues","message","name","senderEmail","clientEmail","sent","buttonText","success","error","clickSubmit","e","preventDefault","email","then","data","console","log","showError","display","showSuccess","handleChange","target","value","contactForm"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {emailContactForm} from \"../../actions/form\";\r\n\r\nconst WithoutAuthorEmail = () => {\r\n\r\n    const [values, setValues] = useState({\r\n        message: '',\r\n        name: '',\r\n        senderEmail: 'kurilovsergey15@gmail.com',\r\n        clientEmail: '',\r\n        sent: false,\r\n        buttonText: 'Send Message',\r\n        success: false,\r\n        error: false\r\n    })\r\n\r\n    const {message, name, senderEmail, success, error,buttonText, clientEmail} = values\r\n\r\n\r\n    const clickSubmit = (e) => {\r\n        e.preventDefault()\r\n        setValues({ ...values, buttonText: \"Sending...\"})\r\n        emailContactForm({ name, email: senderEmail, message, clientEmail}).then(data => {\r\n            console.log(data)\r\n            if (data.error){\r\n                setValues({ ...values, error: data.error})\r\n            }else{\r\n                setValues({ ...values, sent: true, name: \"\", email: \"\", message: \"\", clientEmail: \"\", buttonText: \"Sent\", success: data.success })\r\n            }\r\n        })\r\n    }\r\n\r\n    const showError = () => <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>{error}</div>\r\n    const showSuccess = () => success && <div className=\"alert alert-info\" style={{ display: success ? '' : 'none' }}>Thank you for contacting us!</div>\r\n    const handleChange = name => e => setValues({ ...values, [name]: e.target.value, error: false, success: false, buttonText: \"Send Message\" });\r\n\r\n\r\n    const contactForm = () => (\r\n        <form onSubmit={clickSubmit} className=\"pb-5\">\r\n            <div className=\"form-group\">\r\n                <label className=\"lead\">Message</label>\r\n                <textarea className=\"form-control\" value={message} required type=\"text\" rows=\"10\" onChange={handleChange('message')} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"lead\">Name</label>\r\n                <input className=\"form-control\" value={name} required type=\"text\" onChange={handleChange('name')} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"lead\">Email</label>\r\n                <input className=\"form-control\" value={clientEmail} required type=\"email\" onChange={handleChange('clientEmail')} />\r\n            </div>\r\n            <div>\r\n                <button className=\"btn btn-primary\">{buttonText}</button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n\r\n    return (\r\n        <>\r\n            {showError()}\r\n            {showSuccess()}\r\n            {contactForm() }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default WithoutAuthorEmail;\r\n"]},"metadata":{},"sourceType":"module"}