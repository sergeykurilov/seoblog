{"ast":null,"code":"import { API } from \"../config\";\nimport fetch from \"isomorphic-fetch\";\nimport cookie from \"js-cookie\";\nexport const handleResponse = response => {\n  if (response.status === 401) {\n    signout(() => {\n      Router.push({\n        pathname: \"/signin\",\n        query: {\n          message: \"Your session is expired please sign in\"\n        }\n      });\n    });\n  } else {\n    return false;\n  }\n};\nexport const signup = user => {\n  return fetch(`${API}/signup`, {\n    \"method\": \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  }).then(res => {\n    return res.json();\n  }).catch(err => console.log(err));\n};\nexport const signin = user => {\n  return fetch(`${API}/signin`, {\n    \"method\": \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  }).then(res => {\n    return res.json();\n  }).catch(err => console.log(err));\n};\nexport const forgotPassword = email => {\n  return fetch(`${API}/forgot-password`, {\n    \"method\": \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email\n    })\n  }).then(res => {\n    return res.json();\n  }).catch(error => console.log(error));\n};\nexport const resetPassword = resetInfo => {\n  return fetch(`${API}/reset-password`, {\n    \"method\": \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(resetInfo)\n  }).then(res => {\n    return res.json();\n  }).catch(err => console.log(err));\n}; //set cookie\n\nconst setCookie = (key, value) => {\n  if (false) {\n    cookie.set(key, value, {\n      expires: 1\n    });\n  }\n};\n\nconst removeCookie = key => {\n  if (false) {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n}; //get cookie\n\n\nexport const getCookie = key => {\n  if (false) {\n    return cookie.get(key);\n  }\n}; //localstorage\n\nconst setLocalStorage = (key, value) => {\n  if (false) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n}; //signout\n\n\nconst removeLocalStorage = key => {\n  if (false) {\n    localStorage.removeItem(key);\n  }\n};\n\nexport const signout = next => {\n  removeCookie('token');\n  removeLocalStorage('user');\n  next();\n  return fetch(`${API}/signout`, {\n    method: 'GET'\n  }).then(response => {\n    console.log('signout success');\n  }).catch(err => console.log(err));\n}; //authenticate user by pass data to localstorage and cookie\n\nexport const authenticate = (data, next) => {\n  setCookie(\"token\", data.token);\n  setLocalStorage(\"user\", data.user);\n  next();\n};\nexport const isAuth = () => {\n  if (false) {\n    const checkedCookie = getCookie(\"token\");\n\n    if (checkedCookie) {\n      if (localStorage.getItem(\"user\")) {\n        return JSON.parse(localStorage.getItem(\"user\"));\n      }\n    }\n  } else {\n    return false;\n  }\n};","map":{"version":3,"sources":["E:/seoblog/frontend/actions/auth.js"],"names":["API","fetch","cookie","handleResponse","response","status","signout","Router","push","pathname","query","message","signup","user","headers","Accept","body","JSON","stringify","then","res","json","catch","err","console","log","signin","forgotPassword","email","error","resetPassword","resetInfo","setCookie","key","value","set","expires","removeCookie","remove","getCookie","get","setLocalStorage","localStorage","setItem","removeLocalStorage","removeItem","next","method","authenticate","data","token","isAuth","checkedCookie","getItem","parse"],"mappings":"AAAA,SAAQA,GAAR,QAAkB,WAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAGA,OAAO,MAAMC,cAAc,GAAIC,QAAD,IAAc;AACxC,MAAGA,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA2B;AACvBC,IAAAA,OAAO,CAAC,MAAM;AACVC,MAAAA,MAAM,CAACC,IAAP,CAAY;AACRC,QAAAA,QAAQ,EAAE,SADF;AAERC,QAAAA,KAAK,EAAE;AACHC,UAAAA,OAAO,EAAE;AADN;AAFC,OAAZ;AAMH,KAPM,CAAP;AAQH,GATD,MASK;AACD,WAAO,KAAP;AACH;AACJ,CAbM;AAeP,OAAO,MAAMC,MAAM,GAAIC,IAAD,IAAU;AAC5B,SAAOZ,KAAK,CAAE,GAAED,GAAI,SAAR,EAAkB;AAC1B,cAAU,MADgB;AAE1Bc,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAFiB;AAM1BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AANoB,GAAlB,CAAL,CAQFM,IARE,CAQGC,GAAG,IAAI;AACT,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,GAVE,EAWFC,KAXE,CAWIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXX,CAAP;AAYH,CAbM;AAgBP,OAAO,MAAMG,MAAM,GAAIb,IAAD,IAAU;AAC5B,SAAOZ,KAAK,CAAE,GAAED,GAAI,SAAR,EAAkB;AAC1B,cAAU,MADgB;AAE1Bc,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAFiB;AAM1BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AANoB,GAAlB,CAAL,CAQFM,IARE,CAQGC,GAAG,IAAI;AACT,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,GAVE,EAWFC,KAXE,CAWIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXX,CAAP;AAYH,CAbM;AAiBP,OAAO,MAAMI,cAAc,GAAIC,KAAD,IAAW;AACrC,SAAO3B,KAAK,CAAE,GAAED,GAAI,kBAAR,EAA2B;AACnC,cAAU,KADyB;AAEnCc,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAF0B;AAMnCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACU,MAAAA;AAAD,KAAf;AAN6B,GAA3B,CAAL,CAQFT,IARE,CAQGC,GAAG,IAAI;AACT,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,GAVE,EAWFC,KAXE,CAWIO,KAAK,IAAIL,OAAO,CAACC,GAAR,CAAYI,KAAZ,CAXb,CAAP;AAYH,CAbM;AAgBP,OAAO,MAAMC,aAAa,GAAIC,SAAD,IAAe;AACxC,SAAO9B,KAAK,CAAE,GAAED,GAAI,iBAAR,EAA0B;AAClC,cAAU,KADwB;AAElCc,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAFyB;AAMlCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAea,SAAf;AAN4B,GAA1B,CAAL,CAQFZ,IARE,CAQGC,GAAG,IAAI;AACT,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,GAVE,EAWFC,KAXE,CAWIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXX,CAAP;AAYH,CAbM,C,CAiBP;;AACA,MAAMS,SAAS,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC9B,aAAqB;AACjBhC,IAAAA,MAAM,CAACiC,GAAP,CAAWF,GAAX,EAAgBC,KAAhB,EAAuB;AACnBE,MAAAA,OAAO,EAAE;AADU,KAAvB;AAGH;AACJ,CAND;;AAOA,MAAMC,YAAY,GAAIJ,GAAD,IAAS;AAC1B,aAAqB;AACjB/B,IAAAA,MAAM,CAACoC,MAAP,CAAcL,GAAd,EAAmB;AACfG,MAAAA,OAAO,EAAE;AADM,KAAnB;AAGH;AACJ,CAND,C,CAOA;;;AAEA,OAAO,MAAMG,SAAS,GAAIN,GAAD,IAAS;AAC9B,aAAqB;AAClB,WAAO/B,MAAM,CAACsC,GAAP,CAAWP,GAAX,CAAP;AACF;AACJ,CAJM,C,CAQP;;AAEA,MAAMQ,eAAe,GAAG,CAACR,GAAD,EAAKC,KAAL,KAAe;AACnC,aAAqB;AACjBQ,IAAAA,YAAY,CAACC,OAAb,CAAqBV,GAArB,EAA0BhB,IAAI,CAACC,SAAL,CAAegB,KAAf,CAA1B;AACH;AACJ,CAJD,C,CAKA;;;AAIA,MAAOU,kBAAkB,GAAIX,GAAD,IAAS;AACjC,aAAqB;AACjBS,IAAAA,YAAY,CAACG,UAAb,CAAwBZ,GAAxB;AACH;AACJ,CAJD;;AAKA,OAAO,MAAM3B,OAAO,GAAGwC,IAAI,IAAI;AAC3BT,EAAAA,YAAY,CAAC,OAAD,CAAZ;AACAO,EAAAA,kBAAkB,CAAC,MAAD,CAAlB;AACAE,EAAAA,IAAI;AAEJ,SAAO7C,KAAK,CAAE,GAAED,GAAI,UAAR,EAAmB;AAC3B+C,IAAAA,MAAM,EAAE;AADmB,GAAnB,CAAL,CAGF5B,IAHE,CAGGf,QAAQ,IAAI;AACdoB,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH,GALE,EAMFH,KANE,CAMIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANX,CAAP;AAOH,CAZM,C,CAcP;;AAGA,OAAO,MAAMyB,YAAY,GAAG,CAACC,IAAD,EAAOH,IAAP,KAAgB;AACxCd,EAAAA,SAAS,CAAC,OAAD,EAAUiB,IAAI,CAACC,KAAf,CAAT;AACAT,EAAAA,eAAe,CAAC,MAAD,EAASQ,IAAI,CAACpC,IAAd,CAAf;AACAiC,EAAAA,IAAI;AACP,CAJM;AAOP,OAAO,MAAMK,MAAM,GAAG,MAAM;AACxB,aAAqB;AAClB,UAAMC,aAAa,GAAGb,SAAS,CAAC,OAAD,CAA/B;;AACC,QAAGa,aAAH,EAAiB;AACb,UAAGV,YAAY,CAACW,OAAb,CAAqB,MAArB,CAAH,EAAgC;AAC5B,eAAOpC,IAAI,CAACqC,KAAL,CAAWZ,YAAY,CAACW,OAAb,CAAqB,MAArB,CAAX,CAAP;AACH;AACJ;AACJ,GAPD,MAOO;AACH,WAAO,KAAP;AACH;AACJ,CAXM","sourcesContent":["import {API} from \"../config\";\r\nimport fetch from \"isomorphic-fetch\"\r\nimport cookie from \"js-cookie\"\r\n\r\n\r\nexport const handleResponse = (response) => {\r\n    if(response.status === 401){\r\n        signout(() => {\r\n            Router.push({\r\n                pathname: \"/signin\",\r\n                query: {\r\n                    message: \"Your session is expired please sign in\"\r\n                }\r\n            })\r\n        })\r\n    }else{\r\n        return false\r\n    }\r\n}\r\n\r\nexport const signup = (user) => {\r\n    return fetch(`${API}/signup`, {\r\n        \"method\": \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(res => {\r\n            return res.json()\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const signin = (user) => {\r\n    return fetch(`${API}/signin`, {\r\n        \"method\": \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(res => {\r\n            return res.json()\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\n\r\n\r\nexport const forgotPassword = (email) => {\r\n    return fetch(`${API}/forgot-password`, {\r\n        \"method\": \"PUT\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({email})\r\n    })\r\n        .then(res => {\r\n            return res.json()\r\n        })\r\n        .catch(error => console.log(error))\r\n}\r\n\r\n\r\nexport const resetPassword = (resetInfo) => {\r\n    return fetch(`${API}/reset-password`, {\r\n        \"method\": \"PUT\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(resetInfo)\r\n    })\r\n        .then(res => {\r\n            return res.json()\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\n\r\n\r\n//set cookie\r\nconst setCookie = (key, value) => {\r\n    if (process.browser) {\r\n        cookie.set(key, value, {\r\n            expires: 1\r\n        })\r\n    }\r\n}\r\nconst removeCookie = (key) => {\r\n    if (process.browser) {\r\n        cookie.remove(key, {\r\n            expires: 1\r\n        });\r\n    }\r\n}\r\n//get cookie\r\n\r\nexport const getCookie = (key) => {\r\n    if (process.browser) {\r\n       return cookie.get(key);\r\n    }\r\n}\r\n\r\n\r\n\r\n//localstorage\r\n\r\nconst setLocalStorage = (key,value) => {\r\n    if (process.browser) {\r\n        localStorage.setItem(key, JSON.stringify(value))\r\n    }\r\n}\r\n//signout\r\n\r\n\r\n\r\nconst  removeLocalStorage = (key) => {\r\n    if (process.browser) {\r\n        localStorage.removeItem(key)\r\n    }\r\n}\r\nexport const signout = next => {\r\n    removeCookie('token');\r\n    removeLocalStorage('user');\r\n    next();\r\n\r\n    return fetch(`${API}/signout`, {\r\n        method: 'GET'\r\n    })\r\n        .then(response => {\r\n            console.log('signout success');\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\n//authenticate user by pass data to localstorage and cookie\r\n\r\n\r\nexport const authenticate = (data, next) => {\r\n    setCookie(\"token\", data.token)\r\n    setLocalStorage(\"user\", data.user)\r\n    next()\r\n}\r\n\r\n\r\nexport const isAuth = () => {\r\n    if (process.browser) {\r\n       const checkedCookie = getCookie(\"token\")\r\n        if(checkedCookie){\r\n            if(localStorage.getItem(\"user\")){\r\n                return JSON.parse(localStorage.getItem(\"user\"))\r\n            }\r\n        }\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}